#!perl

use strict;
use warnings;

use File::Spec;
use Test::More;

use constant SOQ => File::Spec->catfile( '.', 'soq' );
use constant CORPUS  => 'corpus';
use constant ORIG    => File::Spec->catfile( CORPUS, 'orig.jpg' );
use constant EPSILON => 0.001;

my %test = (
  'q10'     => { 'R' => '0.7730', 'G' => '0.7941', 'B' => '0.7471', },
  'q10-g1'  => { 'R' => '0.7728', 'G' => '0.7941', 'B' => '0.7471', },
  'q10-g2'  => { 'R' => '0.7728', 'G' => '0.7941', 'B' => '0.7471', },
  'q10-g3'  => { 'R' => '0.7728', 'G' => '0.7941', 'B' => '0.7471', },
  'q20'     => { 'R' => '0.8271', 'G' => '0.8414', 'B' => '0.8075', },
  'q20-g1'  => { 'R' => '0.8270', 'G' => '0.8413', 'B' => '0.8074', },
  'q20-g2'  => { 'R' => '0.8270', 'G' => '0.8413', 'B' => '0.8074', },
  'q20-g3'  => { 'R' => '0.8270', 'G' => '0.8413', 'B' => '0.8074', },
  'q30'     => { 'R' => '0.8584', 'G' => '0.8697', 'B' => '0.8455', },
  'q30-g1'  => { 'R' => '0.8583', 'G' => '0.8696', 'B' => '0.8454', },
  'q30-g2'  => { 'R' => '0.8583', 'G' => '0.8696', 'B' => '0.8454', },
  'q30-g3'  => { 'R' => '0.8583', 'G' => '0.8696', 'B' => '0.8454', },
  'q40'     => { 'R' => '0.8733', 'G' => '0.8830', 'B' => '0.8617', },
  'q40-g1'  => { 'R' => '0.8732', 'G' => '0.8829', 'B' => '0.8616', },
  'q40-g2'  => { 'R' => '0.8732', 'G' => '0.8829', 'B' => '0.8616', },
  'q40-g3'  => { 'R' => '0.8732', 'G' => '0.8829', 'B' => '0.8616', },
  'q50'     => { 'R' => '0.8923', 'G' => '0.8998', 'B' => '0.8816', },
  'q50-g1'  => { 'R' => '0.8921', 'G' => '0.8996', 'B' => '0.8815', },
  'q50-g2'  => { 'R' => '0.8920', 'G' => '0.8996', 'B' => '0.8815', },
  'q50-g3'  => { 'R' => '0.8920', 'G' => '0.8996', 'B' => '0.8815', },
  'q60'     => { 'R' => '0.8958', 'G' => '0.9066', 'B' => '0.8889', },
  'q60-g1'  => { 'R' => '0.8957', 'G' => '0.9065', 'B' => '0.8888', },
  'q60-g2'  => { 'R' => '0.8957', 'G' => '0.9065', 'B' => '0.8888', },
  'q60-g3'  => { 'R' => '0.8957', 'G' => '0.9065', 'B' => '0.8888', },
  'q70'     => { 'R' => '0.9253', 'G' => '0.9300', 'B' => '0.9195', },
  'q70-g1'  => { 'R' => '0.9250', 'G' => '0.9298', 'B' => '0.9186', },
  'q70-g2'  => { 'R' => '0.9249', 'G' => '0.9297', 'B' => '0.9185', },
  'q70-g3'  => { 'R' => '0.9249', 'G' => '0.9297', 'B' => '0.9185', },
  'q80'     => { 'R' => '0.9851', 'G' => '0.9869', 'B' => '0.9829', },
  'q80-g1'  => { 'R' => '0.9849', 'G' => '0.9868', 'B' => '0.9827', },
  'q80-g2'  => { 'R' => '0.9849', 'G' => '0.9867', 'B' => '0.9825', },
  'q80-g3'  => { 'R' => '0.9848', 'G' => '0.9866', 'B' => '0.9825', },
  'q90'     => { 'R' => '0.9904', 'G' => '0.9913', 'B' => '0.9889', },
  'q90-g1'  => { 'R' => '0.9903', 'G' => '0.9913', 'B' => '0.9889', },
  'q90-g2'  => { 'R' => '0.9903', 'G' => '0.9913', 'B' => '0.9888', },
  'q90-g3'  => { 'R' => '0.9903', 'G' => '0.9913', 'B' => '0.9888', },
  'q100'    => { 'R' => '0.9985', 'G' => '0.9991', 'B' => '0.9980', },
  'q100-g1' => { 'R' => '0.9982', 'G' => '0.9988', 'B' => '0.9976', },
  'q100-g2' => { 'R' => '0.9981', 'G' => '0.9987', 'B' => '0.9975', },
  'q100-g3' => { 'R' => '0.9980', 'G' => '0.9986', 'B' => '0.9974', },
);

plan tests => 5 * keys %test;

while ( my ( $name, $want ) = each %test ) {
  my $file = File::Spec->catfile( CORPUS, "$name.jpg" );
  ok -f $file, "$name: $file exists";
  my $got = soq( ORIG, $file );
  is join( '', sort keys %$got ), join( '', sort keys %$want ),
   "$name: keys match";
  for my $chan ( keys %$got ) {
    ok abs( $want->{$chan} - $got->{$chan} ) < EPSILON,
     "$name: $chan value OK";
  }
}

sub soq {
  my @cmd = ( SOQ, @_ );
  my %r = ();
  open my $ch, '-|', @cmd or die SOQ, " failed: $!\n";
  while ( <$ch> ) {
    chomp;
    /^(\w+):\s*(\d+(?:\.\d+)?)$/ or die "Bad output line: $_\n";
    $r{$1} = $2;
  }
  return \%r;
}

# vim:ts=2:sw=2:et:ft=perl

